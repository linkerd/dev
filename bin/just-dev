#!/usr/bin/env -S just --working-directory . --justfile

all: actions pull-images

# Format actionlint output for Github Actions if running in CI.
_actionlint-fmt := if env_var_or_default("GITHUB_ACTIONS", "") != "true" { "" } else {
  '{{range $err := .}}::error file={{$err.Filepath}},line={{$err.Line}},col={{$err.Column}}::{{$err.Message}}%0A```%0A{{replace $err.Snippet "\\n" "%0A"}}%0A```\n{{end}}'
}

sh:
    just-sh

actions: check-action-images lint-actions

# Lints all GitHub Actions workflows
lint-actions *paths='.github/workflows/*.yml':
    actionlint \
        {{ if _actionlint-fmt != '' { "-format '" + _actionlint-fmt + "'" } else { "" } }} \
        {{ paths }}

# Ensure the all github workflows and actions reference the same devcontainer version as that in .devcontainer.json.
check-action-images:
    #!/usr/bin/env bash
    set -euo pipefail
    IMAGE=$(j5j .devcontainer/devcontainer.json |jq -r '.image')
    EX=0
    while IFS= read filelineimg ; do
        # Parse lines in the form `file:line img:tag`
        fileline="${filelineimg%% *}"
        file="${fileline%%:*}"
        line="${fileline##*:}"
        img="${filelineimg##* }"
        name="${img%%:*}"
        # Tag may be in the form of `version[-variant]`
        tag="${img##*:}"
        version="${tag%%-*}"
        if [ "$name" = 'ghcr.io/linkerd/dev' ] && [ "$name:$version" != "$IMAGE" ]; then
            if [ "${GITHUB_ACTIONS:-}" = "true" ]; then
                echo "::error file=${file},line=${line}::Expected image '$IMAGE'; found '${img}'" >&2
            else
                echo "${file}:${line}: Expected image '$IMAGE'; found '${img}'" >&2
            fi
            EX=$(( EX+1 ))
        fi
    done < <({{ justfile_directory() / "action-images" }})
    exit $EX

# Pulls all images used in GitHub Actions workflows
pull-images: pull-dev-image pull-action-images

pull-dev-image:
    docker pull $(j5j .devcontainer/devcontainer.json |jq -r '.image')

pull-action-images:
    #!/usr/bin/env bash
    set -euo pipefail
    while IFS= read filelineimg ; do
        # Parse lines in the form `file:line img:tag` where tag may be in the form of `version[-variant]`
        fileline="${filelineimg%% *}"
        file="${fileline%%:*}"
        line="${fileline##*:}"
        img="${filelineimg##* }"
        if ! docker pull "${img}" ; then
            if [ "${GITHUB_ACTIONS:-}" = "true" ]; then
                echo "::error file=${file},line=${line}::Could not pull $img" >&2
            else
                echo "${file}:${line}: Could not pull $img" >&2
            fi
        fi
    done < <({{ justfile_directory() / "action-images" }})

prune-action-cache path:
    @-{{ justfile_directory() / "action-docker-prune" + " " + path }}
